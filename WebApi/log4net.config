<log4net>
  <root>
    <level value="ALL" />
    <appender-ref ref="infoAppender" />
    <appender-ref ref="errorAppender" />
    <appender-ref ref="debugAppender" />
    <!--<appender-ref ref="ElasticSearch7Appender" />-->
  </root>
  <!-- 日志的等级，它们由高到底分别为： OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL -->
  <!--信息日志配置-->
  <appender name="infoAppender" type="log4net.Appender.RollingFileAppender">
    <!--日志路径-->
    <param name="File" value="Log\Info\" />
    <!--是否是向文件中追加日志-->
    <param name="AppendToFile" value="true" />
    <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <!--单个日志文件最大的大小-->
    <param name="MaxFileSize" value="10240" />
    <!--备份文件的个数-->
    <param name="MaxSizeRollBackups" value="100" />
    <!--当前这一天的日志文件按照file来生成。在第二天的时候，把前一天的日志，加上datePattern-->
    <param name="PreserveLogFileNameExtension" value="true" />
    <!--日志文件名是否是固定不变的-->
    <param name="StaticLogFileName" value="false" />
    <!--日志文件名格式为:2020-03\info_20080831.log-->
    <param name="DatePattern" value="yyyy-MM/&quot;info_&quot;yyyyMMdd&quot;.log&quot;" />
    <!--日志根据日期滚动-->
    <param name="RollingStyle" value="Date" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread]-[%r]毫秒 %-5level %logger - %message%newline" />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="INFO" />
      <param name="LevelMax" value="INFO" />
    </filter>
  </appender>
  <!--调试日志配置-->
  <appender name="debugAppender" type="log4net.Appender.RollingFileAppender">
    <param name="File" value="Log\Debug\" />
    <param name="AppendToFile" value="true" />
    <param name="MaxFileSize" value="10240" />
    <param name="MaxSizeRollBackups" value="100" />
    <param name="PreserveLogFileNameExtension" value="true" />
    <param name="StaticLogFileName" value="false" />
    <param name="DatePattern" value="yyyy-MM/&quot;debug_&quot;yyyyMMdd&quot;.log&quot;" />
    <param name="RollingStyle" value="Date" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread]-[%r]毫秒 %-5level %logger - %message%newline" />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="DEBUG" />
      <param name="LevelMax" value="DEBUG" />
    </filter>
  </appender>
  <!--错误日志配置-->
  <appender name="errorAppender" type="log4net.Appender.RollingFileAppender">
    <param name="File" value="Log\Error\" />
    <param name="AppendToFile" value="true" />
    <param name="MaxFileSize" value="10240" />
    <param name="MaxSizeRollBackups" value="100" />
    <param name="PreserveLogFileNameExtension" value="true" />
    <param name="StaticLogFileName" value="false" />
    <param name="DatePattern" value="yyyy-MM/&quot;Error_&quot;yyyyMMdd&quot;.log&quot;" />
    <param name="RollingStyle" value="Date" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread]-[%r]毫秒 %-5level %logger - %message%newline" />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="ERROR" />
      <param name="LevelMax" value="ERROR" />
    </filter>
  </appender>
  <!--ElasticSearch 日志-->
  <appender name="ElasticSearch7Appender" type="log4net.ElasticSearchAppender.DotNetCore.ElasticSearchAppender, log4net.ElasticSearchAppender.DotNetCore">
    <Server>localhost</Server>
    <Port>9200</Port>
    <!-- optional: in case elasticsearch is located behind a reverse proxy the URL is like http://Server:Port/Path, default = empty string -->
    <Path>/testapi</Path>
    <IndexName>ServiceB_%{+yyyy-MM-dd}</IndexName>
    <!-- type support was removed in ElasticSearch 7, so if not defined in configuration there won't be a type in the request -->
    <IndexType>ServiceB_App</IndexType>
    <Bulksize>2000</Bulksize>
    <BulkIdleTimeout>10000</BulkIdleTimeout>
    <IndexAsync>False</IndexAsync>
    <DropEventsOverBulkLimit>False</DropEventsOverBulkLimit>

    <!-- Serialize log object as json (default is true).
         This in case you log the object this way: `logger.Debug(obj);` and not: `logger.Debug("string");` -->
    <SerializeObjects>True</SerializeObjects>

    <!-- optional: elasticsearch timeout for the request, default = 10000 -->
    <ElasticSearchTimeout>10000</ElasticSearchTimeout>

    <!-- optional: ssl connection -->
    <Ssl>False</Ssl>
    <AllowSelfSignedServerCert>False</AllowSelfSignedServerCert>
    <!--You can add parameters to the request to control the parameters sent to ElasticSearch.
    for example, as you can see here, you can add a custom id source to the appender.
    The Key is the key to be added to the request, and the value is the parameter's name in the log event properties.-->
    <!--<IndexOperationParams>
      -->
    <!--<Parameter>
        <Key>172.20.37.56-gateway</Key>
        <Value>appdomain</Value>
      </Parameter>-->
    <!--
      <Parameter>
        <Key>_routing</Key>
        <Value>%{RoutingSource}</Value>
      </Parameter>
      <Parameter>
        <Key>_id</Key>
        <Value>Michael_%{IdSource}</Value>
      </Parameter>
      <Parameter>
        <Key>key</Key>
        <Value>value</Value>
      </Parameter>
    </IndexOperationParams>-->

    <!-- for more information read about log4net.Core.FixFlags -->
    <FixedFields>Partial</FixedFields>

    <!--<Template>
      <Name>templateName</Name>
      <FileName>path2template.json</FileName>
    </Template>-->

    <!--Only one credential type can be used at once-->
    <!--Here we list all possible types-->
    <AuthenticationMethod>
      <!--For basic authentication purposes-->
      <Basic>
        <Username>elastic</Username>
        <Password>Michael</Password>
      </Basic>
      <!--For AWS ElasticSearch service-->
      <!--
      <Aws>
        <Aws4SignerSecretKey>Secret</Aws4SignerSecretKey>
        <Aws4SignerAccessKey>AccessKey</Aws4SignerAccessKey>
        <Aws4SignerRegion>Region</Aws4SignerRegion>
      </Aws>
      -->
      <!-- For Api Key (X-Pack) authentication -->
      <!--
      <ApiKey>
        -->
      <!-- ApiKeyBase64 takes precedence over Id/ApiKey  -->
      <!--
        <ApiKeyBase64>aWQ6YXBpa2V5</ApiKeyBase64>
      </ApiKey>
      -->
      <!-- Or -->
      <!--
      <ApiKey>
        <Id>id</Id>
        <ApiKey>apikey</ApiKey>
      </ApiKey>-->
    </AuthenticationMethod>

    <!-- all filters goes in ElasticFilters tag -->
    <!--<ElasticFilters>
      <Add>
        <Key>@type</Key>
        <Value>Special</Value>
      </Add>

      -->
    <!-- using the @type value from the previous filter -->
    <!--
      <Add>
        <Key>SmartValue</Key>
        <Value>the type is %{@type}</Value>
      </Add>

      <Remove>
        <Key>@type</Key>
      </Remove>

      -->
    <!-- you can load custom filters like I do here -->
    <!--
      <Filter type="log4stash.Filters.RenameKeyFilter, log4stash">
        <Key>SmartValue</Key>
        <RenameTo>SmartValue2</RenameTo>
      </Filter>

      -->
    <!-- converts a json object to fields in the document -->
    <!--
      <Json>
        <SourceKey>JsonRaw</SourceKey>
        <FlattenJson>false</FlattenJson>
        -->
    <!-- the separator property is only relevant when setting the FlattenJson property to 'true' -->
    <!--
        <Separator>_</Separator>
      </Json>

      -->
    <!-- converts an xml object to fields in the document -->
    <!--
      <Xml>
        <SourceKey>XmlRaw</SourceKey>
        <FlattenXml>false</FlattenXml>
      </Xml>

      -->
    <!-- kv and grok filters similar to logstash's filters -->
    <!--
      <Kv>
        <SourceKey>Message</SourceKey>
        <ValueSplit>:=</ValueSplit>
        <FieldSplit> ,</FieldSplit>
      </Kv>

      <Grok>
        <SourceKey>Message</SourceKey>
        <Pattern>the message is %{WORD:Message} and guid %{UUID:the_guid}</Pattern>
        <Overwrite>true</Overwrite>
      </Grok>

      -->
    <!-- Convert string like: "1,2, 45 9" into array of numbers [1,2,45,9] -->
    <!--
      <ConvertToArray>
        <SourceKey>someIds</SourceKey>
        -->
    <!-- The separators (space and comma) -->
    <!--
        <Seperators>, </Seperators>
      </ConvertToArray>

      <Convert>
        -->
    <!-- convert given key to string -->
    <!--
        <ToString>shouldBeString</ToString>

        -->
    <!-- same as ConvertToArray. Just for convenience -->
    <!--
        <ToArray>
          <SourceKey>anotherIds</SourceKey>
        </ToArray>
      </Convert>
    </ElasticFilters>-->
  </appender>
  <!--<logger name="webApiTest.Program">
    <level value="ALL" />
    <appender-ref ref="ElasticSearch7Appender" />
  </logger>-->
</log4net>